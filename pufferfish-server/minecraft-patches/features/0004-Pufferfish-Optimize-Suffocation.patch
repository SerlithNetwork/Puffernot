From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kevin Raneri <kevin.raneri@gmail.com>
Date: Tue, 9 Nov 2021 14:50:57 -0500
Subject: [PATCH] Pufferfish Optimize Suffocation

The isInWall check to determine suffocation is quite expensive, and
often is completely unnecessary to check. We do two things here to
improve this:

1. We only check for suffocation once per 20 ticks. The maximum
no-damage ticks value means that this change should be extremely
difficult, if not impossible, for players to notice.

2. We additionally execute a check to see if the player can even take
damage in the first place. This check doesn't improve performance much
but is so much cheaper than the suffocation check that it's worth
keeping it.

diff --git a/net/minecraft/world/entity/LivingEntity.java b/net/minecraft/world/entity/LivingEntity.java
index 35d71978a3d360eed97feb66d1048bee337ef2b9..8bba401e10d8b3c8ec403ca953d91aacc82c36aa 100644
--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -437,7 +437,7 @@ public abstract class LivingEntity extends Entity implements Attackable, Waypoin
 
         if (this.isAlive() && this.level() instanceof ServerLevel serverLevel1) {
             boolean flag = this instanceof Player;
-            if (this.isInWall()) {
+            if (this.shouldCheckForSuffocation() && this.isInWall()) { // Pufferfish - Optimize suffocation
                 this.hurtServer(serverLevel1, this.damageSources().inWall(), 1.0F);
             } else if (flag && !serverLevel1.getWorldBorder().isWithinBounds(this.getBoundingBox())) {
                 double d = serverLevel1.getWorldBorder().getDistanceToBorder(this) + serverLevel1.getWorldBorder().getDamageSafeZone();
@@ -518,6 +518,19 @@ public abstract class LivingEntity extends Entity implements Attackable, Waypoin
         profilerFiller.pop();
     }
 
+    // Pufferfish start - Optimize suffocation
+    public boolean couldPossiblyBeHurt(float amount) {
+        if ((float) this.invulnerableTime > (float) this.invulnerableDuration / 2.0F && amount <= this.lastHurt) {
+            return false;
+        }
+        return true;
+    }
+
+    public boolean shouldCheckForSuffocation() {
+        return !gg.pufferfish.pufferfish.PufferfishConfig.ENABLE_SUFFOCATION_OPTIMIZATION || (tickCount % 10 == 0 && couldPossiblyBeHurt(1.0F));
+    }
+    // Pufferfish end - Optimize suffocation
+
     @Override
     protected float getBlockSpeedFactor() {
         return Mth.lerp((float)this.getAttributeValue(Attributes.MOVEMENT_EFFICIENCY), super.getBlockSpeedFactor(), 1.0F);
diff --git a/net/minecraft/world/entity/boss/wither/WitherBoss.java b/net/minecraft/world/entity/boss/wither/WitherBoss.java
index 787b74c5aa02afc4ba95fa1cdaf6cc21b6554b56..db1fb88c2ac507cb7894d22d21cd81ab65fe2d6f 100644
--- a/net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ b/net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -136,6 +136,13 @@ public class WitherBoss extends Monster implements RangedAttackMob {
         this.bossEvent.setName(this.getDisplayName());
     }
 
+    // Pufferfish start - Optimize suffocation
+    @Override
+    public boolean shouldCheckForSuffocation() {
+        return true;
+    }
+    // Pufferfish end - Optimize suffocation
+
     @Override
     public SoundEvent getAmbientSound() {
         return SoundEvents.WITHER_AMBIENT;
